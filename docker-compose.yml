services:

  gateway:
    env_file:
      - ./.env
    build: ./gateway
    container_name: gateway
    ports:
      - "8000:8000"
    networks:
      - backend
    volumes:
      - ./host-logs/gateway:/app/logs

  admin:
    env_file:
      - ./.env
    build: ./admin
    container_name: admin
    ports:
      - "8003:8003"
    networks:
      - backend

  alert:
    env_file:
      - ./.env
    build: ./alert
    container_name: alert
    ports:
      - "8005:8005"
    networks:
      - backend

  order:
    env_file:
      - ./.env
    build: ./order
    container_name: order
    ports:
      - "8004:8004"
    networks:
      - backend

  product:
    env_file:
      - ./.env
    build: ./product
    environment:
      MONGODB_URI: "mongodb://${DB_USER}:${DB_PASSWORD}@${MONGO_URL}:${MONGO_PORT}/${MONGO_DB}?authSource=admin"
    container_name: product
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8001:8001"
    networks:
      - backend
    volumes:
      - ./host-logs/product:/app/logs

  cart:
    build: ./cart
    container_name: cart
    env_file:
      - ./.env                                       # ← load .env here
    environment:
      MONGODB_URI: "mongodb://${DB_USER}:${DB_PASSWORD}@${MONGO_URL}:${MONGO_PORT}/${MONGO_DB}?authSource=admin"
    ports:
      - "8002:8002"
    networks:
      - backend

  promotion:
    env_file:
      - ./.env
    build: ./promotion
    container_name: promotion
    ports:
      - "8006:8006"
    networks:
      - backend
    depends_on:
      - mongodb_promotion

  recommend:
    env_file:
      - ./.env
    build: ./recommend
    container_name: recommend
    restart: always
    ports:
      - "8007:8007"
    networks:
      - backend
    depends_on:
      - product

networks:
  backend:
    driver: bridge

# docker-compose.yml (루트에 위치)

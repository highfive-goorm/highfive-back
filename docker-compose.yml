services:
  gateway:
    build: ./gateway
    env_file: .env
    container_name: gateway
    ports:
      - "8000:8000"

    depends_on:
      - product
    networks:
      - backend

  admin:
    build: ./admin
    container_name: admin
    ports:
      - "8003:8003"
    networks:
      - backend

  alert:
    build: ./alert
    container_name: alert
    ports:
      - "8005:8005"
    networks:
      - backend


  order:
    build: ./order
    container_name: order
    ports:
      - "8004:8004"
    networks:
      - backend

  product:
    build: ./product
    container_name: product
    ports:
      - "8001:8001"
    networks:
      - backend

  mongodb_product:
    image: mongo:6.0
    container_name: mongodb_product
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: product
    ports:
      - "27018:27017"
    volumes:
      - mongodb_product:/data/db
      - ./mongo-init/product:/docker-entrypoint-initdb.d
      - ./data:/data
    networks:
      - backend

  mongodb_brand:
    image: mongo:6.0
    container_name: mongodb_brand
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_USER}
      MONGO_INITDB_DATABASE: brand
    ports:
      - "27020:27017"
    volumes:
      - mongodb_brand:/data/db
      - ./mongo-init/brand:/docker-entrypoint-initdb.d
      - ./data:/data
    networks:
      - backend

  mongodb_order:
    image: mongo:6.0
    container_name: mongodb_order
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "27019:27017"
    volumes:
      - mongodb_order:/data/db
      - ./mongo-init/order:/docker-entrypoint-initdb.d
      - ./data:/data
    networks:
      - backend

  cart:
    build: ./cart
    container_name: cart
    ports:
      - "8002:8002"
    networks:
      - backend

  mongodb_cart:
    image: mongo:6.0
    container_name: mongodb_cart
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: cart
    ports:
      - "27017:27017"
    volumes:
      - mongodb_cart:/data/db
      - ./mongo-init/cart:/docker-entrypoint-initdb.d
      - ./data:/data
    networks:
      - backend

  # === promotion MongoDB 및 서비스 추가 ===
  mongodb_promotion:
    image: mongo:6.0
    container_name: mongodb_promotion
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: promotion
    ports:
      - "27021:27017"
    volumes:
      - mongodb_promotion:/data/db
      - ./mongo-init/promotion:/docker-entrypoint-initdb.d
      - ./data:/data
    networks:
      - backend

  promotion:
    build: ./promotion
    container_name: promotion
    ports:
      - "8006:8006"
    networks:
      - backend
    depends_on:
      - mongodb_promotion

volumes:
  mysql:
  mongodb_cart:
  mongodb_product:
  mongodb_order:
  mongodb_brand:
  mongodb_promotion:
  mysql_alert:
  mysql_user_data:
networks:
  backend:
    driver: bridge
